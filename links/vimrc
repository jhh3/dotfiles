"""
" Author: John Holliman
" File: ~/.vimrc
"""

" Load vundle
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/vundle'

" System
Plugin 'scrooloose/nerdtree.git'
Plugin 'bling/vim-airline'
Plugin 'ervandew/supertab'

" Syntax
Plugin 'scrooloose/syntastic'
Plugin 'fatih/vim-go'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'lervag/vimtex'
Plugin 'Valloric/YouCompleteMe'
Plugin 'marijnh/tern_for_vim'
Plugin 'hynek/vim-python-pep8-indent'

" Other
Plugin 'vitalk/vim-simple-todo'

call vundle#end()
" Now we can turn our filetype functionality back on
filetype plugin indent on

" Neovim
let g:python_host_prog = '/usr/bin/python'

syntax enable " Coloring is good -- requires terminal theme suport
set background=dark
colorscheme vimbrant
set mouse=a " enable mouse support
set wildmenu " cool tab completion stuff
set wildmode=list:longest,full 
set number " line numbers 
set ignorecase " searching - ignore case and AI
set smartcase
set visualbell " beeps are annoying 
set hlsearch " Search
set title " Title
set ruler " Ruler
set laststatus=2 " Always show status line
set directory=/tmp// " Swap
set backupskip=/tmp/*,/private/tmp/*
set shiftwidth=2 " Tabs to 2 spaces
set tabstop=2
set noexpandtab
set autoindent " autoindent
set cursorline " Highlight current line
hi CursorLine		cterm=NONE ctermbg=233
set pastetoggle=<F5> " toggle pasting to deal with autoindent

" Use Q for formatting the current paragraph (or selection)
vmap Q gq
nmap Q gqap

" toggle spelling with F4 key
map <F6> :set spell!<CR><Bar>:echo "Spell Check: " . strpart("OffOn", 3 * &spell, 3)<CR>

" format
map <F9> mzgg=G`z
"
" Exit insert with jk.
imap jk <esc>

" Save file with ctrl space
nnoremap <NUL> :w<CR>

:let mapleader = ","

"""
" Custom filetype settings
"""

" HTML configurations
autocmd FileType html setlocal shiftwidth=2 tabstop=2 softtabstop=2 noexpandtab

" C configurations
autocmd FileType c setlocal colorcolumn=80

" C++ configurations
autocmd FileType cpp setlocal colorcolumn=80

" Python configurations
autocmd FileType python setlocal shiftwidth=4 expandtab tabstop=4 softtabstop=4
autocmd FileType python setlocal colorcolumn=120

" LaTeX configurations
autocmd FileType tex setlocal nocursorline

"""
" Custom functions
"""

" Strip trailing whitespace (F7)
function! StripWhitespace()
	let save_cursor = getpos(".")
	let old_query = getreg('/')
	:%s/\s\+$//e
	call setpos('.', save_cursor)
	call setreg('/', old_query)
endfunction
map <F7> :call StripWhitespace()<CR>

"""
" Plugin settings
"""

" Simple todo list
let g:simple_todo_tick_symbol = "✗"

" Tabline
hi TabLine      ctermfg=Black  ctermbg=Green     cterm=NONE
hi TabLineFill  ctermfg=Black  ctermbg=Green     cterm=NONE
hi TabLineSel   ctermfg=White  ctermbg=DarkBlue  cterm=NONE

" You Complete Me
let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'

" Syntastic settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_python_checkers = ['pyflakes']
let g:synastic_cpp_compiler = 'clang++'
let g:syntastic_cpp_compiler_options = '-std=c++11'
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol = "✗"
let g:syntastic_warning_symbol = "⚠"
let g:syntastic_mode_map = { "mode": "active", "active_filetypes": [], "passive_filetypes": ["tex"] }
let g:syntastic_python_python_exec = '/usr/bin/python'
let g:syntastic_check_on_open = 1
nnoremap <F8> :SyntasticCheck<CR> :SyntasticToggleMode<CR>

" Airline settings
let g:Powerline_symbols = 'fancy'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

" NERDTree
map <C-k> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | end

